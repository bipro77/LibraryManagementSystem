package com.bookman.lms.entity;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Column;
import jakarta.persistence.Table;
import java.util.Objects; // For Objects.hash and Objects.equals

/**
 * Represents a Book entity in the Library Management System.
 * This class maps to a 'books' table in the database.
 */
@Entity
@Table(name = "books") // Specifies the table name in the database
public class Book {

    @Id // Marks 'id' as the primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Configures auto-incrementing ID
    private Long id;

    @Column(nullable = false, length = 255) // 'title' cannot be null, max length 255
    private String title;

    @Column(nullable = false, unique = true, length = 13) // 'isbn' cannot be null, must be unique, max length 13 (for ISBN-13)
    private String isbn;

    @Column // 'year' can be null, default column name
    private Integer year; // Using Integer to allow for null if year is unknown

    @Column(length = 100) // 'genre' can be null, max length 100
    private String genre;

    /**
     * Default constructor required by JPA.
     * Do not use directly for creating new instances unless necessary for JPA.
     */
    public Book() {
    }

    /**
     * Constructor for creating a new Book instance without an ID (ID will be generated by the database).
     *
     * @param title The title of the book.
     * @param isbn The International Standard Book Number (ISBN) of the book.
     * @param year The publication year of the book.
     * @param genre The genre of the book.
     */
    public Book(String title, String isbn, Integer year, String genre) {
        this.title = title;
        this.isbn = isbn;
        this.year = year;
        this.genre = genre;
    }

    // --- Getters and Setters ---

    public Long getId() {
        return id;
    }

    // Setter for ID is typically not used for auto-generated IDs, but included for completeness
    public void setId(Long id) {
        this.id = id;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getIsbn() {
        return isbn;
    }

    public void setIsbn(String isbn) {
        this.isbn = isbn;
    }

    public Integer getYear() {
        return year;
    }

    public void setYear(Integer year) {
        this.year = year;
    }

    public String getGenre() {
        return genre;
    }

    public void setGenre(String genre) {
        this.genre = genre;
    }

    // --- equals(), hashCode(), and toString() ---

    /**
     * Overrides the equals method to compare Book objects based on their ID.
     * This is crucial for JPA entity management.
     *
     * @param o The object to compare with.
     * @return true if the objects are equal, false otherwise.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || this.getClass() != o.getClass()) return false;
        Book book = (Book) o;
        // For entities, equality is typically based on the ID if it's not null.
        // If ID is null (e.g., new entity not yet persisted), use business key (like ISBN).
        return this.id != null && Objects.equals(id, book.id);
    }

    /**
     * Overrides the hashCode method, consistent with the equals method.
     *
     * @return The hash code for the Book object.
     */
    @Override
    public int hashCode() {
        // Use Objects.hash for null-safe hash code generation.
        // If ID is null, use business key (like ISBN) for consistent hashing.
        return id != null ? Objects.hash(id) : Objects.hash(isbn);
    }

    /**
     * Provides a string representation of the Book object for debugging and logging.
     *
     * @return A string representation of the Book.
     */
    @Override
    public String toString() {
        return "Book{" +
               "id=" + id +
               ", title='" + title + '\'' +
               ", isbn='" + isbn + '\'' +
               ", year=" + year +
               ", genre='" + genre + '\'' +
               '}';
    }
}
